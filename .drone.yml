---
kind: pipeline
type: kubernetes
name: kube-system

defaults:
  image: &default_image
    hashicorp/terraform:0.13.3
  env: &default_env
    TF_VAR_lets_encrypt_email:
      from_secret: lets_encrypt_email
    TF_VAR_services_domain:
      from_secret: services_domain
    TF_VAR_drone_github_client_id:
      from_secret: drone_github_client_id
    TF_VAR_drone_github_client_secret:
      from_secret: drone_github_client_secret
    TF_VAR_drone_initial_admin_github_username:
      from_secret: drone_initial_admin_github_username
    TF_VAR_kubernetes_service_host:
      from_secret: kubernetes_service_host
    TF_VAR_kubernetes_service_port:
      from_secret: kubernetes_service_port
    TF_VAR_auth0_tenant_url:
      from_secret: auth0_tenant_url
    TF_VAR_auth0_client_audience:
      from_secret: auth0_client_audience
    TF_VAR_auth0_anonymous_client_id:
      from_secret: auth0_anonymous_client_id
    TF_VAR_auth0_anonymous_client_secret:
      from_secret: auth0_anonymous_client_secret

steps:
- name: plan
  image: *default_image
  environment: *default_env

  commands:
  # TODO remove
  - nslookup postgres.postgres.svc.cluster.local
  - cat /etc/hosts
  - cat /etc/resolv.conf
  - tail -f /dev/null

  - tail -f /dev/null
  - terraform init -lock=false -input=false
  - terraform validate
  - terraform plan -lock=false -input=false
  when:
    event: [ push ]
    branch:
      exclude: [ master ]

- name: apply
  image: *default_image
  environment: *default_env

  commands:
  - terraform init -lock=true -lock-timeout=0s -input=false -backend-config path=/var/run/tfstate/terraform.tfstate
  - terraform validate
  - terraform plan -lock=true -lock-timeout=0s -input=false -out=tfplan .
  - terraform apply -lock=true -lock-timeout=0s -input=false tfplan
  when:
    branch: [ master ]
